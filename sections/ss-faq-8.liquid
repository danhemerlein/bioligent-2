{% comment %}
---------------------------------------------------------
Copyright Â© 2023 Section Store. All rights reserved.
Unauthorized copying, modification, distribution, or use
of this code or any portion of it, is strictly prohibited.
Violators will be prosecuted to the fullest extent of the law.
For inquiries or permissions, contact daniel@section.store
---------------------------------------------------------
{% endcomment %}


{%- liquid 
  assign padding_horizontal = section.settings.padding_horizontal
  assign padding_horizontal_mobile = section.settings.padding_horizontal_mobile
  assign padding_top = section.settings.padding_top
  assign padding_bottom = section.settings.padding_bottom
  assign border_color = section.settings.border_color
  assign border_thickness = section.settings.border_thickness
  assign margin_top = section.settings.margin_top
  assign margin_bottom = section.settings.margin_bottom
  assign background_color = section.settings.background_color
  assign background_gradient = section.settings.background_gradient
  assign full_width = section.settings.full_width
  assign content_width = section.settings.content_width

  assign nav_row = section.settings.nav_row
  assign nav_gap = section.settings.nav_gap
  assign nav_gap_mobile = section.settings.nav_gap_mobile

  assign button_size = section.settings.button_size
  assign button_size_mobile = section.settings.button_size_mobile
  assign button_color = section.settings.button_color
  assign button_hover_color = section.settings.button_hover_color
  assign button_custom = section.settings.button_custom
  assign button_font = section.settings.button_font
  assign button_height = section.settings.button_height
  assign button_padding_vertical = section.settings.button_padding_vertical
  assign button_padding_vertical_mobile = section.settings.button_padding_vertical_mobile
  assign button_padding_horizontal = section.settings.button_padding_horizontal
  assign button_padding_horizontal_mobile = section.settings.button_padding_horizontal_mobile
  assign button_radius = section.settings.button_radius
  assign button_border_thickness = section.settings.button_border_thickness
  assign button_border_color = section.settings.button_border_color
  assign button_border_hover_color = section.settings.button_border_hover_color
  assign button_bg_color = section.settings.button_bg_color
  assign button_bg_hover_color = section.settings.button_bg_hover_color

  assign body_mt = section.settings.body_mt
  assign body_mt_mobile = section.settings.body_mt_mobile
  assign body_padding_vertical = section.settings.body_padding_vertical
  assign body_padding_vertical_mobile = section.settings.body_padding_vertical_mobile
  assign body_padding_horizontal = section.settings.body_padding_horizontal
  assign body_padding_horizontal_mobile = section.settings.body_padding_horizontal_mobile
  assign body_radius = section.settings.body_radius
  assign body_border_thickness = section.settings.body_border_thickness
  assign body_border_color = section.settings.body_border_color
  assign body_bg_color = section.settings.body_bg_color

  assign heading_size = section.settings.heading_size
  assign heading_size_mobile = section.settings.heading_size_mobile
  assign heading_color = section.settings.heading_color
  assign heading_custom = section.settings.heading_custom
  assign heading_font = section.settings.heading_font
  assign heading_height = section.settings.heading_height
  assign heading_align = section.settings.heading_align
  assign heading_align_mobile = section.settings.heading_align_mobile
  assign heading_mt_mobile = section.settings.heading_mt_mobile
  assign heading_mt = section.settings.heading_mt
  assign heading_mb_mobile = section.settings.heading_mb_mobile
  assign heading_mb = section.settings.heading_mb

  assign item_border_color = section.settings.item_border_color
  assign item_border_thickness = section.settings.item_border_thickness
  assign item_padding_bottom = section.settings.item_padding_bottom
  assign item_mt_mobile = section.settings.item_mt_mobile
  assign item_mt = section.settings.item_mt

  assign question_size = section.settings.question_size
  assign question_size_mobile = section.settings.question_size_mobile
  assign question_color = section.settings.question_color
  assign question_custom = section.settings.question_custom
  assign question_font = section.settings.question_font
  assign question_height = section.settings.question_height

  assign arrow_color = section.settings.arrow_color
  assign arrow_hover_color = section.settings.arrow_hover_color
  assign arrow_bg_color = section.settings.arrow_bg_color
  assign arrow_bg_hover_color = section.settings.arrow_bg_hover_color
  assign arrow_size = section.settings.arrow_size
  assign arrow_size_mobile = section.settings.arrow_size_mobile

  assign answer_size = section.settings.answer_size
  assign answer_size_mobile = section.settings.answer_size_mobile
  assign answer_color = section.settings.answer_color
  assign answer_custom = section.settings.answer_custom
  assign answer_font = section.settings.answer_font
  assign answer_height = section.settings.answer_height
  assign answer_padding_top = section.settings.answer_padding_top
  
-%}

{%- style -%}

  {{  button_font | font_face: font_display: 'swap' }}
  {{  heading_font | font_face: font_display: 'swap' }}
  {{  question_font | font_face: font_display: 'swap' }}
  {{  answer_font | font_face: font_display: 'swap' }}
  
  .section-{{ section.id }} {
    border-top: solid {{ border_color }} {{ border_thickness }}px;
    border-bottom: solid {{ border_color }} {{ border_thickness }}px;
    margin-top: {{ margin_top | times: 0.75 | round: 0 }}px;
    margin-bottom: {{ margin_bottom | times: 0.75 | round: 0 }}px;
  }
  
  .section-{{ section.id }}-settings {
    margin: 0 auto;
    padding-top: {{ padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ padding_bottom | times: 0.75 | round: 0 }}px;
    padding-left: {{ padding_horizontal_mobile }}rem;
    padding-right: {{ padding_horizontal_mobile }}rem;
  }

  .faq-nav-{{ section.id }} {
    display: grid;
    grid-template-columns: 1fr;
    gap: {{ nav_gap_mobile }}px;
  }

  .faq-button-{{ section.id }} {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    font-size: {{ button_size_mobile }}px;
    color: {{ button_color }};
    line-height: {{ button_height }}%;
    text-align: center;
    text-transform: unset;
    text-decoration: none;
    padding: {{ button_padding_vertical_mobile }}px {{ button_padding_horizontal_mobile }}px;
    border-radius: {{ button_radius }}px;
    background-color: {{ button_bg_color }};
    border: {{ button_border_thickness }}px solid {{ button_border_color }};
    transition: all 0.25s ease 0s;
    position: relative;
    font-weight: 700;
    z-index: 2;
  }

  .faq-button-{{ section.id }}:hover {
    background-color: {{ button_bg_hover_color }};
    border: {{ button_border_thickness }}px solid {{ button_border_hover_color }};
    color: {{ button_hover_color }};
    transition: all 0.25s ease 0s;
  }

  .faq-body-{{ section.id }} {
    margin-top: {{ body_mt_mobile }}px;
    padding: {{ body_padding_vertical_mobile }}px {{ body_padding_horizontal_mobile }}px;
    border-radius: {{ body_radius }}px;
    background-color: {{ body_bg_color }};
    border: {{ body_border_thickness }}px solid {{ body_border_color }};
  }

  .faq-heading-{{ section.id }} {
    display: block;
    width: 100%;
    text-align: {{ heading_align_mobile }};
    margin: 0;
    margin-bottom: {{ heading_mb_mobile }}px;
    font-size: {{ heading_size_mobile }}px;
    color: {{ heading_color }};
    line-height: {{ heading_height }}%;
    text-transform: unset;
    font-weight: 700;
  }

  .faq-block-{{ section.id }}:not(:first-child) .faq-heading-{{ section.id }} {
    margin-top: {{ heading_mt_mobile }}px;
  }

  .faq-item-{{ section.id }} {
    position: relative;
    margin-top: {{ item_mt_mobile }}px;
    border-bottom: {{ item_border_thickness }}px solid {{ item_border_color }};
    padding-bottom: {{ item_padding_bottom | times: 0.75 | round: 0 }}px;
  }

  .faq-toggle-{{ section.id }} {
    display: flex;
    align-items: center;
    justify-content: space-between;
    cursor: pointer;
    gap: 12px;
  }

  .faq-arrow-{{ section.id }} {
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 0 0 {{ arrow_size_mobile }}px;
    height: {{ arrow_size_mobile }}px;
    transition: all 0.3s ease 0s;
    transform: rotate(var(--rotate));
    border-radius: 50%;
    background-color: {{ arrow_bg_color }};
  }

  .faq-toggle-{{ section.id }}:hover .faq-arrow-{{ section.id }} {
    background-color: {{ arrow_bg_hover_color }};
    transition: all 0.3s ease 0s;
  }

  .faq-arrow-{{ section.id }} svg {
    width: {{ arrow_size_mobile | times: 0.4 | round: 0 }}px;
    height: {{ arrow_size_mobile | times: 0.4 | round: 0 }}px;
  }

  .faq-arrow-{{ section.id }} svg path {
    fill: {{ arrow_color }};
    transition: all 0.3s ease 0s;
  }

  .faq-toggle-{{ section.id }}:hover .faq-arrow-{{ section.id }} svg path {
    fill: {{ arrow_hover_color }};
    transition: all 0.3s ease 0s;
  }

  .faq-question-{{ section.id }} {
    margin: 0px;
    font-size: {{ question_size_mobile }}px;
    color: {{ question_color }};
    line-height: {{ question_height }}%;
    text-transform: unset;
    font-weight: 700;
  }

  .faq-answer-{{ section.id }} {
    transition: all 0.2s ease-in-out;
    overflow: hidden;
  }

  .faq-answer-{{ section.id }} * {
    margin: 0px;
    font-size: {{ answer_size_mobile }}px;
    color: {{ answer_color }};
    line-height: {{ answer_height }}%;
    text-transform: unset;
  }

  .faq-answer-{{ section.id }} p {
    min-height: 10px;
  }

  .faq-answer-{{ section.id }} p:not(:first-child ) {
    margin-top: 10px;
  } 

  .faq-height-cal-{{ section.id }} {
    visibility: hidden;
    opacity: 0;
    pointer-events: none;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    padding-top: {{ answer_padding_top }}px;
  }

  .faq-height-cal-{{ section.id }} * {
    margin: 0px;
    font-size: {{ answer_size_mobile }}px;
    color: {{ answer_color }};
    line-height: {{ answer_height }}%;
    text-transform: unset;
  }

  .faq-height-cal-{{ section.id }} p {
    min-height: 10px;
  }

  .faq-height-cal-{{ section.id }} p:not(:first-child ) {
    margin-top: 10px;
  } 

  @media(min-width: 768px) {
    .faq-nav-{{ section.id }} {
      grid-template-columns: repeat({{ nav_row | times: 0.5 | round: 0 }}, 1fr);
    }
  }
  
  @media(min-width: 1024px) {

    .section-{{ section.id }} {
      margin-top: {{ margin_top }}px;
      margin-bottom: {{ margin_bottom }}px;
    }
    
    .section-{{ section.id }}-settings {
      padding: 0 5rem;
      padding-top: {{ padding_top }}px;
      padding-bottom: {{ padding_bottom }}px;
      padding-left: {{ padding_horizontal }}rem;
      padding-right: {{ padding_horizontal }}rem;
    }

    .faq-nav-{{ section.id }} {
      grid-template-columns: repeat({{ nav_row }}, 1fr);
      gap: {{ nav_gap }}px;
    }

    .faq-button-{{ section.id }} {
      padding: {{ button_padding_vertical }}px {{ button_padding_horizontal }}px;
      font-size: {{ button_size }}px;
    }

    .faq-body-{{ section.id }} {
      margin-top: {{ body_mt }}px;
      padding: {{ body_padding_vertical }}px {{ body_padding_horizontal }}px;
    }
    
    .faq-heading-{{ section.id }} {
      margin-bottom: {{ heading_mb }}px;
      text-align: {{ heading_align }};
      font-size: {{ heading_size }}px;
    }

    .faq-block-{{ section.id }}:not(:first-child) .faq-heading-{{ section.id }} {
      margin-top: {{ heading_mt }}px;
    }

    .faq-item-{{ section.id }} {
      margin-top: {{ item_mt }}px;
      padding-bottom: {{ item_padding_bottom }}px;
    }

    .faq-question-{{ section.id }} {
      font-size: {{ question_size }}px;
    }

    .faq-answer-{{ section.id }} * {
      font-size: {{ answer_size }}px;
    }

    .faq-arrow-{{ section.id }} {
      flex: 0 0 {{ arrow_size }}px;
      height: {{ arrow_size }}px;
    }
  
    .faq-arrow-{{ section.id }} svg {
      width: {{ arrow_size | times: 0.4 | round: 0 }}px;
      height: {{ arrow_size | times: 0.4 | round: 0 }}px;
    }

    .faq-height-cal-{{ section.id }} * {
      font-size: {{ answer_size }}px;
    }
  }
  
{%- endstyle -%}

{% unless full_width %}
  <style>
    .section-{{ section.id }}-settings {
      max-width: {{ content_width }}rem;
    }
  </style>
{% endunless %}

{% if button_custom %}
  <style>
    .faq-button-{{ section.id }} {
      font-family: {{ button_font.family }}, {{ button_font.fallback_families }};
      font-weight: {{ button_font.weight }};
      font-style: {{ button_font.style }};
    }
  </style>
{% endif %}

{% if heading_custom %}
  <style>
    .faq-heading-{{ section.id }} {
      font-family: {{ heading_font.family }}, {{ heading_font.fallback_families }};
      font-weight: {{ heading_font.weight }};
      font-style: {{ heading_font.style }};
    }
  </style>
{% endif %}

{% if question_custom %}
  <style>
    .faq-question-{{ section.id }} {
      font-family: {{ question_font.family }}, {{ question_font.fallback_families }};
      font-weight: {{ question_font.weight }};
      font-style: {{ question_font.style }};
    }
  </style>
{% endif %}

{% if answer_custom %}
  <style>
    .faq-answer-{{ section.id }} * {
      font-family: {{ answer_font.family }}, {{ answer_font.fallback_families }};
      font-weight: {{ answer_font.weight }};
      font-style: {{ answer_font.style }};
    }
  </style>
{% endif %}

<div class="section-{{ section.id }} faq-{{ section.id }}" style="background-color:{{ background_color }}; background-image: {{ background_gradient }};">
    <div class="section-{{ section.id }}-settings">
      <div class="faq-nav-{{ section.id }}">
        {% for block in section.blocks %}
          {% if block.type == "category" %}
            <a href="#{{ block.id }}" class="faq-button-{{ section.id }}">{{ block.settings.heading }}</a>
          {% endif %}
        {% endfor %}
      </div>

      <div class="faq-body-{{ section.id }}">
        {% assign inside_item = false %}
        {% for block in section.blocks %}
          {% if block.type == "category" %}
            {% if inside_item %}
              </div>
            {% endif %}

            <div class="faq-block-{{ section.id }}" id="{{ block.id }}">
              <div class="faq-heading-{{ section.id }}">{{ block.settings.heading }}</div>
              {% assign inside_item = true %}
            
          {% elsif block.type == "item" %}
              <div class="faq-item-{{ section.id }}">
                <div class="faq-toggle-{{ section.id }}">
                  <p class="faq-question-{{ section.id }}">{{ block.settings.question }}</p>
                  <div class="faq-arrow-{{ section.id }}">
                    <svg xmlns="http://www.w3.org/2000/svg" version="1.0" viewBox="0 0 143.000000 83.000000" preserveAspectRatio="xMidYMid meet">
                      <g transform="translate(0.000000,83.000000) scale(0.100000,-0.100000)" fill="" stroke="none">
                      <path d="M57 772 l-57 -57 360 -360 360 -360 357 357 358 358 -63 62 -62 63 -298 -298 -297 -297 -295 295 c-162 162 -297 295 -300 295 -3 0 -31 -26 -63 -58z"></path>
                      </g>
                    </svg>
                  </div>
                </div>
                <div class="faq-answer-{{ section.id }}" style="display: none; height: 0px; padding-top: 0px; padding-bottom: 0px;">
                    {{ block.settings.answer }}
                  </div>
                <div class="faq-height-cal-{{ section.id }}">
                  {{ block.settings.answer }}
                </div>
              </div>
          {% endif %}
        {% endfor %}
        {% if inside_item %}
          </div>
        {% endif %}
      </div>
    </div>
</div>

<script>
  function initFAQ8() {
    const smoothScrollLinks = document.querySelectorAll('.faq-button-{{ section.id }}');

    smoothScrollLinks.forEach(function(link) {
      link.addEventListener('click', function(e) {
        e.preventDefault();
  
        const targetId = this.getAttribute('href');
        const targetElement = document.querySelector(targetId);
        const offsetTop = targetElement.offsetTop;
  
        window.scrollTo({
          top: offsetTop,
          behavior: 'smooth'
        });
      });
    });
    
    const answerPaddingTop = {{ answer_padding_top }};
    const answerPaddingBottom = 0;

    const faqs = document.querySelectorAll(
      '.faq-item-{{ section.id }}'
    );
    const buttons = document.querySelectorAll(
      '.faq-toggle-{{ section.id }}'
    );
    const answers = document.querySelectorAll(
      '.faq-answer-{{ section.id }}'
    );
    const answersHeightCalElements = document.querySelectorAll(
      '.faq-height-cal-{{ section.id }}'
    );
    const icons = document.querySelectorAll(
      '.faq-arrow-{{ section.id }}'
    );

    let activeIndex = -1;

    function openAnswer(index) {
      const height = answersHeightCalElements[index].offsetHeight;

      answers[index].style.display = 'block';
      setTimeout(() => {
        answers[index].style.paddingTop = `${answerPaddingTop}px`;
        answers[index].style.paddingBottom = `${answerPaddingBottom}px`;
        answers[index].style.height = `${height }px`;
        icons[index].style.setProperty('--rotate', '180deg');
      });
    }
    function closeAnswer(index) {
      answers[index].style.paddingTop = 0;
      answers[index].style.paddingBottom = 0;
      answers[index].style.height = 0;
      icons[index].style.setProperty('--rotate', '0deg');

      setTimeout(() => {
        answers[index].style.display = 'none';
      }, 300);
    }
    function toggleAnswer(index) {
      if (answers[index].style.display === 'none') {
        openAnswer(index);
        activeIndex = index;
      } else {
        closeAnswer(index);
        activeIndex = -1;
      }
    }
    function closeAllAnswerBut(index) {
      answers.forEach((answer, i) => {
        if (i !== index) {
          closeAnswer(i);
        }
      });
    }

    // When clicked, toggle the answer, animate the answer's height:
    buttons.forEach((button, index) => {
      button.addEventListener('click', () => {
        toggleAnswer(index);
        // closeAllAnswerBut(index);
      });
    });

    // When the window is resized, debounce the answer's height:
    let resizeTimer;
    window.addEventListener('resize', () => {
      clearTimeout(resizeTimer);
      resizeTimer = setTimeout(() => {
        if (activeIndex !== -1) {
          const height = answersHeightCalElements[activeIndex].offsetHeight;
          answers[activeIndex].style.height = `${height}px`;
        }
      }, 250);
    });
  }

  document.addEventListener('DOMContentLoaded', initFAQ8);
  
  if (Shopify.designMode) {
     document.addEventListener('shopify:section:unload', initFAQ8);
     document.addEventListener('shopify:section:load', initFAQ8);
  }
</script>

{% schema %}
  {
    "name": "SS - FAQ #8",
    "settings": [
      {
        "type": "header",
        "content": "FAQ Navigation Settings"
      },
      {
        "type": "range",
        "id": "nav_gap",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Navigation Gap",
        "default": 12
      },
      {
        "type": "range",
        "id": "nav_gap_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Navigation Gap - Mobile",
        "default": 12
      },
      {
        "type": "range",
        "id": "nav_row",
        "min": 1,
        "max": 6,
        "step": 1,
        "label": "Navigation Items per Row",
        "default": 5
      },
      {
        "type": "header",
        "content": "Navigation Button Settings"
      },
      {
        "type": "checkbox",
        "id": "button_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "button_font",
        "label": "Button Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "button_size",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "px",
        "label": "Button Size",
        "default": 16
      },
      {
        "type": "range",
        "id": "button_size_mobile",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "px",
        "label": "Button Size - Mobile",
        "default": 16
      },
      {
        "type": "range",
        "id": "button_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Button Line Height",
        "default": 120
      },
      {
        "type": "range",
        "id": "button_padding_vertical",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Button Padding Vertical",
        "default": 20
      },
      {
        "type": "range",
        "id": "button_padding_vertical_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Button Padding Vertical - Mobile",
        "default": 20
      },
      {
         "type": "range",
         "id": "button_padding_horizontal",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Button Padding Horizontal",
         "default": 16
      },
      {
         "type": "range",
         "id": "button_padding_horizontal_mobile",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Button Padding Horizontal - Mobile",
         "default": 16
      },
      {
         "type": "range",
         "id": "button_radius",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Button Roundness",
         "default": 100
      },
      {
         "type": "range",
         "id": "button_border_thickness",
         "min": 0,
         "max": 10,
         "step": 1,
         "unit": "px",
         "label": "Button Border Thickness",
         "default": 0
      },
      {
        "type": "header",
        "content": "Body Settings"
      },
      {
        "type": "range",
        "id": "body_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Body Margin Top",
        "default": 32
      },
      {
        "type": "range",
        "id": "body_mt_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Body Margin Top - Mobile",
        "default": 24
      },
      {
        "type": "range",
        "id": "body_padding_vertical",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Body Padding Vertical",
        "default": 64
      },
      {
        "type": "range",
        "id": "body_padding_vertical_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Body Padding Vertical - Mobile",
        "default": 32
      },
      {
         "type": "range",
         "id": "body_padding_horizontal",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Body Padding Horizontal",
         "default": 64
      },
      {
         "type": "range",
         "id": "body_padding_horizontal_mobile",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Body Padding Horizontal - Mobile",
         "default": 32
      },
      {
         "type": "range",
         "id": "body_radius",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Body Border Radius",
         "default": 20
      },
      {
         "type": "range",
         "id": "body_border_thickness",
         "min": 0,
         "max": 10,
         "step": 1,
         "unit": "px",
         "label": "Body Border Thickness",
         "default": 0
      },
      {
        "type": "header",
        "content": "Category Heading Settings"
      },
      {
        "type": "checkbox",
        "id": "heading_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "heading_font",
        "label": "Heading Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "heading_size",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Heading Size",
        "default": 36
      },
      {
        "type": "range",
        "id": "heading_size_mobile",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Heading Size - Mobile",
        "default": 20
      },
      {
        "type": "range",
        "id": "heading_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Heading Line Height",
        "default": 130
      },
      {
        "type": "range",
        "id": "heading_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Heading Margin Top",
        "default": 64
      },
      {
        "type": "range",
        "id": "heading_mt_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Heading Margin Top - Mobile",
        "default": 32
      },
      {
        "type": "range",
        "id": "heading_mb",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Heading Margin Bottom",
        "default": 24
      },
      {
        "type": "range",
        "id": "heading_mb_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Heading Margin Bottom - Mobile",
        "default": 24
      },
      {
        "type": "text_alignment",
        "id": "heading_align",
        "label": "Heading Align"
      },
      {
        "type": "text_alignment",
        "id": "heading_align_mobile",
        "label": "Heading Align - Mobile"
      },
      {
        "type": "header",
        "content": "Item Settings"
      },
      {
        "type": "range",
        "id": "item_padding_bottom",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Item Padding Bottom",
        "default": 12
      },
      {
        "type": "range",
        "id": "item_border_thickness",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "px",
        "label": "Item Border Thickness",
        "default": 1
      },
      {
        "type": "range",
        "id": "item_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Item Margin Top",
        "default": 12
      },
      {
        "type": "range",
        "id": "item_mt_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Item Margin Top - Mobile",
        "default": 12
      },
      {
        "type": "header",
        "content": "Question Settings"
      },
      {
        "type": "checkbox",
        "id": "question_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "question_font",
        "label": "Question Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "question_size",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Question Size",
        "default": 18
      },
      {
        "type": "range",
        "id": "question_size_mobile",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Question Size - Mobile",
        "default": 14
      },
      {
        "type": "range",
        "id": "question_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Question Line Height",
        "default": 130
      },
      {
        "type": "header",
        "content": "Arrow Settings"
      },
      {
        "type": "range",
        "id": "arrow_size",
        "min": 10,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Arrow Size",
        "default": 28
      },
      {
        "type": "range",
        "id": "arrow_size_mobile",
        "min": 10,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Arrow Size - Mobile",
        "default": 28
      },
      {
        "type": "header",
        "content": "Answer Settings"
      },
      {
        "type": "checkbox",
        "id": "answer_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "answer_font",
        "label": "Answer Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "answer_size",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Answer Size",
        "default": 16
      },
      {
        "type": "range",
        "id": "answer_size_mobile",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Answer Size - Mobile",
        "default": 14
      },
      {
        "type": "range",
        "id": "answer_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Answer Line Height",
        "default": 170
      },
      {
        "type": "range",
        "id": "answer_padding_top",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Answer Padding Top",
        "default": 16
      },
      {
        "type": "header",
        "content": "Navigation Button Colors"
      },
      {
        "type": "color",
        "label": "Button Text Color",
        "id": "button_color",
        "default": "#6c584c"
      },
      {
        "type": "color",
        "label": "Button Hover Text Color",
        "id": "button_hover_color",
        "default": "#F2F0ED"
      },
      {
        "type": "color",
        "label": "Button Background Color",
        "id": "button_bg_color",
        "default": "#F2F0ED"
      },
      {
        "type": "color",
        "label": "Button Background Hover Color",
        "id": "button_bg_hover_color",
        "default": "#6c584c"
      },
      {
        "type": "color",
        "label": "Button Border Color",
        "id": "button_border_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Button Border Hover Color",
        "id": "button_border_hover_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Body Colors"
      },
      {
        "type": "color",
        "label": "Body Background Color",
        "id": "body_bg_color",
        "default": "#F2F0ED"
      },
      {
        "type": "color",
        "label": "Body Border Color",
        "id": "body_border_color",
        "default": "#6c584c"
      },
      {
        "type": "color",
        "label": "Category Heading Color",
        "id": "heading_color",
        "default": "#6c584c"
      },
      {
        "type": "header",
        "content": "FAQ Item Colors"
      },
      {
        "type": "color",
        "label": "Item Border Color",
        "id": "item_border_color",
        "default": "#E5E7EB"
      },
      {
        "type": "color",
        "label": "Question Color",
        "id": "question_color",
        "default": "#6c584c"
      },
      {
        "type": "color",
        "label": "Answer Color",
        "id": "answer_color",
        "default": "#6c584c"
      },
      {
        "type": "header",
        "content": "Arrow Colors"
      },
      {
        "type": "color",
        "label": "Arrow Color",
        "id": "arrow_color",
        "default": "#6c584c"
      },
      {
        "type": "color",
        "label": "Arrow Hover Color",
        "id": "arrow_hover_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Arrow Background Color",
        "id": "arrow_bg_color"
      },
      {
        "type": "color",
        "label": "Arrow Background Hover Color",
        "id": "arrow_bg_hover_color",
        "default": "#6c584c"
      },
      {
        "type": "header",
        "content": "Section Colors"
      },
      {
        "type": "color",
        "label": "Section background",
        "id": "background_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color_background",
        "id": "background_gradient",
        "label": "Section background gradient"
      },
      {
        "type": "color",
        "label": "Border",
        "id": "border_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Section margin (outside)"
      },
      {
        "type": "range",
        "id": "margin_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin top",
        "default": 0
      },
      {
        "type": "range",
        "id": "margin_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin bottom",
        "default": 0
      },
      {
        "type": "header",
        "content": "Section padding (inside)"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Padding top",
        "default": 36
      },
      {
         "type": "range",
         "id": "padding_bottom",
         "min": 0,
         "max": 100,
         "step": 4,
         "unit": "px",
         "label": "Padding bottom",
         "default": 36
      },
      {
        "type": "range",
        "id": "padding_horizontal",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "rem",
        "label": "Padding sides",
        "default": 5
      },
      {
        "type": "range",
        "id": "padding_horizontal_mobile",
        "min": 0,
        "max": 15,
        "step": 0.5,
        "unit": "rem",
        "label": "Padding sides mobile",
        "default": 1.5
      },
      {
        "type": "header",
        "content": "Section Settings"
      },
      {
        "type": "checkbox",
        "id": "full_width",
        "label": "Full Width",
        "default": false
      },
      {
        "type": "range",
        "id": "content_width",
        "min": 0,
        "max": 400,
        "step": 10,
        "unit": "rem",
        "label": "Section content width",
        "default": 150
      },
      {
        "type": "range",
        "id": "border_thickness",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Border thickness",
        "default": 0
      }
    ],
    "blocks": [
      {
        "type": "category",
        "name": "Category",
        "settings": [
          {
            "type": "text",
            "id": "heading",
            "label": "Heading",
            "default": "Category"
          }
        ]
      },
      {
        "type": "item",
        "name": "Item",
        "settings": [
          {
            "type": "text",
            "id": "question",
            "label": "Question",
            "default": "Lorem ipsum dolor sit amet?"
          },
          {
            "type": "richtext",
            "id": "answer",
            "label": "Answer",
            "default": "<p>Consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Si habetis ulteriores quaestiones, quaeso, nostri auxilium clientibus contact.</p>"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "SS - FAQ #8",
        "blocks": [
          {
            "type": "category",
            "settings": {
              "heading": "PRODUCTS"
            }
          },
          {
            "type": "item"
          },
          {
            "type": "item"
          },
          {
            "type": "item"
          },
          {
            "type": "category",
            "settings": {
              "heading": "SHIPPING"
            }
          },
          {
            "type": "item"
          },
          {
            "type": "item"
          },
          {
            "type": "item"
          },
          {
            "type": "category",
            "settings": {
              "heading": "RETURNS & REFUNDS"
            }
          },
          {
            "type": "item"
          },
          {
            "type": "item"
          },
          {
            "type": "item"
          },
          {
            "type": "category",
            "settings": {
              "heading": "ORDERS & PAYMENT"
            }
          },
          {
            "type": "item"
          },
          {
            "type": "item"
          },
          {
            "type": "item"
          },
          {
            "type": "category",
            "settings": {
              "heading": "CONTACT US"
            }
          },
          {
            "type": "item"
          },
          {
            "type": "item"
          },
          {
            "type": "item"
          }
        ]
      }
    ]
  }
{% endschema %}